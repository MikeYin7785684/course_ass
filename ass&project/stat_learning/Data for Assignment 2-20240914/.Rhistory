y_train <- unlist(model$y)
y_test <- unlist(predict(model,x_test)$y)
mse_train[i] <- mean((y_train-unlist(data$y[train_part]))^2)
mse_test[i] <- mean((y_test-unlist(data$y[test_part]))^2)
cat("Country: ",country_name[i], "model:\n")
print(model)
cat("Training prediction:",y_train , "\n",
"Testing prediction:",y_test , "\n",
"Training MSE:",mse_train[i] , "\n",
"Testing MSE:",mse_test[i] , "\n\n")
}
cat("Total Training MSE ",mean(mse_train),"\n")
cat("Total Test MSE",mean(mse_test),"\n")
print("----------------------------------ppr spline ----------------------------------")
for (i in 1:nrow(he)) {
data_train <- data.frame(
y = he_train[i,],
x1 = gdp_train[i, ],
x2 = dr_young_train[i, ],
x3 = dr_old_train[i, ],
x4 = ghe_train[i, ]
)
data_test <- data.frame(
y = he_test[i,],
x1 = gdp_test[i, ],
x2 = dr_young_test[i, ],
x3 = dr_old_test[i, ],
x4 = ghe_test[i, ]
)
# tuning on nterms
nterms <- 1:10
model <- list()
model.tune <- list()
mse.tune <- numeric(length(nterms))
for(j in seq_along(nterms)){
model.tune[[j]] <- ppr(y ~  x1 + x2 + x3 + x4, data = data_train,nterms = j )
y_test <- unlist(predict(model.tune[[j]],data_test))
mse.tune[j] <- mean((y_test-unlist(data_test$y))^2)
}
index <- which.min(mse.tune)
model[[i]] <- model.tune[[index]]
y_pred_train <- predict(model.tune[[index]], newdata = data_train)
mse_train[i] <- mean((unlist(data_train['y']) - y_pred_train)^2)
y_test <- unlist(predict(model[[i]],data_test))
mse_train[i] <- mean((y_pred_train-unlist(data_train$y))^2)
mse_test[i] <- mse.tune[index]
cat("Country: ",country_name[i], "model:\n")
print(model[[i]])
cat("Training prediction:",y_train , "\n",
"Testing prediction:",y_test , "\n",
"Training MSE:",mse_train[i] , "\n",
"Testing MSE:",mse_test[i] , "\n\n")
}
cat("Total Training MSE ",mean(mse_train),"\n")
cat("Total Test MSE",mean(mse_test),"\n")
X_train <- rbind(matrix(gdp_train,1),
matrix(dr_old_train,1),
matrix(dr_young_train,1),
matrix(ghe_train,1)
)
X_test <- rbind(matrix(gdp_test,1),
matrix(dr_old_test,1),
matrix(dr_young_test,1),
matrix(ghe_test,1)
)
# projection spline
print("----------------------------------gdp spline ----------------------------------")
x_train <- X_train[1,]
x_test <- X_test[1,]
model<-smooth.spline(x_train,unlist(he[,train_part]))
y_train <- unlist(model$y)
y_test <- unlist(predict(model,x_test)$y)
mse_train <- mean((y_train-unlist(data$y[train_part]))^2)
mse_test <- mean((y_test-unlist(data$y[test_part]))^2)
cat("Training MSE:",mse_train , "\n")
cat("Testing MSE:",mse_test , "\n")
# pca spline
print("----------------------------------pca spline ----------------------------------")
rot <- prcomp(t(X_train))$rotation[,1]
x_train <- rot %*% (as.matrix(X_train))
x_test <- rot %*% (as.matrix(X_test))
model<-smooth.spline(x_train,unlist(he[,train_part]))
y_train <- unlist(model$y)
y_test <- unlist(predict(model,x_test)$y)
mse_train <- mean((y_train-unlist(data$y[train_part]))^2)
mse_test <- mean((y_test-unlist(data$y[test_part]))^2)
cat("Training MSE:",mse_train , "\n")
cat("Testing MSE:",mse_test , "\n")
# ppr spline
print("----------------------------------ppr spline ----------------------------------")
data_train <- data.frame(
y = t(matrix(he_train,1)),
x1 = t(matrix(gdp_train,1)),
x2 = t(matrix(dr_old_train,1)),
x3 = t(matrix(dr_young_train,1)),
x4 = t(matrix(ghe_train,1))
)
data_test <- data.frame(
y = t(matrix(he_test,1)),
x1 = t(matrix(gdp_test,1)),
x2 = t(matrix(dr_old_test,1)),
x3 = t(matrix(dr_young_test,1)),
x4 = t(matrix(ghe_test,1))
)
# tuning on nterms
nterms <- 1:10
model <- list()
model.tune <- list()
mse.tune <- numeric(length(nterms))
for(j in seq_along(nterms)){
model.tune[[j]] <- ppr(y ~  x1 + x2 + x3 + x4, data = data_train,nterms = j )
y_test <- unlist(predict(model.tune[[j]],data_test))
mse.tune[j] <- mean((y_test-unlist(data_test$y))^2)
}
index <- which.min(mse.tune)
model<- model.tune[[index]]
y_pred_train <- predict(model, newdata = data_train)
mse_train[i] <- mean((unlist(data_train['y']) - y_pred_train)^2)
y_test <- unlist(predict(model,data_test))
mse_train <- mean((y_pred_train-unlist(data_train$y))^2)
mse_test <- mse.tune[index]
cat("nterms ", nterms[index] ,"\n")
cat("Total Training MSE ",mean(mse_train),"\n")
cat("Total Test MSE",mean(mse_test),"\n")
model <- list()
data_train <- data.frame(
y = t(matrix(he_train,1)),
x1 = t(matrix(gdp_train,1)),
x2 = t(matrix(dr_old_train,1)),
x3 = t(matrix(dr_young_train,1)),
x4 = t(matrix(ghe_train,1))
)
data_test <- data.frame(
y = t(matrix(he_test,1)),
x1 = t(matrix(gdp_test,1)),
x2 = t(matrix(dr_old_test,1)),
x3 = t(matrix(dr_young_test,1)),
x4 = t(matrix(ghe_test,1))
)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~ s(x1,spar = sp[j])+s(x2, spar = sp[j])+s(x3, spar = sp[j])+s(x4, spar = sp[j]),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~ s(x1,spar = sp[j])+s(x2,spar = sp[j])+s(x1,x2,spar = sp[j])+s(x3, spar = sp[j])+s(x4, spar = sp[j]),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
library(gam)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~ s(x1,spar = sp[j])+s(x2,spar = sp[j])+s(x1,x2,spar = sp[j])+s(x3, spar = sp[j])+s(x4, spar = sp[j]),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
library(mgcv)
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~ s(x1,spar = sp[j])+s(x2,spar = sp[j])+s(x1,x2,spar = sp[j])+s(x3, spar = sp[j])+s(x4, spar = sp[j]),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~(x1,x2,sp = sp[j])+s(x3, sp = sp[j])+s(x4, sp = sp[j]),data = data_train)
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~(x1,x2)+s(x3)+s(x4),min.sp=sp[j],data = data_train)
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~s(x1,x2)+s(x3)+s(x4),min.sp=sp[j],data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~s(x1,x2)+s(x3)+s(x4),min.sp=rep(sp[j],3),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~s(x1,x2)+s(x3)+s(x4),sp=rep(sp[j],3),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~s(x1)+s(x2)+s(x1,x2)+s(x3)+s(x4),sp=rep(sp[j],5),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~s(x1,x2)+s(x3)+s(x4),sp=rep(sp[j],5),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
library(mgcv)
model <- NULL
data_train <- data.frame(
y = t(matrix(he_train,1)),
x1 = t(matrix(gdp_train,1)),
x2 = t(matrix(dr_old_train,1)),
x3 = t(matrix(dr_young_train,1)),
x4 = t(matrix(ghe_train,1))
)
data_test <- data.frame(
y = t(matrix(he_test,1)),
x1 = t(matrix(gdp_test,1)),
x2 = t(matrix(dr_old_test,1)),
x3 = t(matrix(dr_young_test,1)),
x4 = t(matrix(ghe_test,1))
)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~ s(x1)+s(x2)+s(x3)+s(x4),sp=rep(sp[j],4)data = data_train)
library(mgcv)
model <- NULL
data_train <- data.frame(
y = t(matrix(he_train,1)),
x1 = t(matrix(gdp_train,1)),
x2 = t(matrix(dr_old_train,1)),
x3 = t(matrix(dr_young_train,1)),
x4 = t(matrix(ghe_train,1))
)
data_test <- data.frame(
y = t(matrix(he_test,1)),
x1 = t(matrix(gdp_test,1)),
x2 = t(matrix(dr_old_test,1)),
x3 = t(matrix(dr_young_test,1)),
x4 = t(matrix(ghe_test,1))
)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~ s(x1)+s(x2)+s(x3)+s(x4),sp=rep(sp[j],4),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Testing MSE:", mse_test, "\n")
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~s(x1,x2)+s(x3)+s(x4),sp=rep(sp[j],5),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~te(x1,x2)+s(x3)+s(x4),sp=rep(sp[j],5),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~ti(x1,x2)+s(x3)+s(x4),sp=rep(sp[j],5),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~te(x1,x2)+s(x3)+s(x4),sp=rep(sp[j],5),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
library(mgcv)
sp <- seq(0.1,1,.1)
model.tune <- list()
mse.tune <- numeric(length(sp))
for (j in seq_along(sp)){
tryCatch({
model.tune[[j]] <- gam(y ~s(x1,x2)+s(x3)+s(x4),sp=rep(sp[j],5),data = data_train)
y_pred_test <- predict(model.tune[[j]], newdata = data_test)
mse.tune[j] <- mean((y_pred_test-unlist(data_test['y']))^2)
}, error = function(e) {
cat("Error fitting model for spar", sp[j], ":", e$message, "\n")
mse.tune[j] <- NA
})
}
index <- which.min(mse.tune)
model <- model.tune[[index]]
cat("Tuning spar:",sp[index],"Model:\n")
print(model)
y_pred_train <- predict(model, newdata = data_train)
cat("Testing prediction:",y_test , "\n")
mse_train<- mean((unlist(data_train['y']) - y_pred_train)^2)
cat( "Training MSE:", mse_train, "\n")
mse_test<- mse.tune[index]
cat("Tuning spar:",sp[index],"Testing MSE:", mse_test, "\n")
